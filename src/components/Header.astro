---
import Nav from './Nav.astro';
---

<header
  class="flex items-center fixed top-0 w-screen justify-between z-20 transition-all duration-300 ease-in-out px-5 py-6 xs:px-7 sm:px-10 md:justify-start md:px-7 lg:px-12 lg:py-7"
>
  <div
    id="backdrop"
    class="invisible h-screen w-screen fixed inset-0 opacity-0 transition-all duration-500 z-30 backdrop-blur-sm bg-[rgba(0,0,0,0.4)]"
  >
  </div>
  <span class="font-cursive text-2xl md:flex-1 md:text-3xl"
    ><a href="/">Rohan Shrestha</a>
  </span>
  <Nav />
  <span class="hidden lg:inline-block lg:flex-1 lg:text-right">
    <a href="/resume.pdf" target="_blank" class="btn-primary">RESUME</a>
  </span>
  <button
    class="flex flex-col gap-1.5 relative z-50 md:hidden"
    id="hamburger-btn"
  >
    {
      [...Array(3)].map(() => (
        <span class="h-0.5 w-7 rounded-full bg-gray-100 transition-all duration-200" />
      ))
    }
  </button>
</header>

<style>
  .active span:first-child {
    transform: translateY(0.5rem) rotate(135deg);
  }
  .active span:nth-child(2) {
    opacity: 0;
  }
  .active span:last-child {
    transform: translateY(-0.5rem) rotate(-135deg);
  }
  .visible {
    visibility: visible;
    opacity: 1;
  }

  .scroll-header {
    backdrop-filter: blur(10px);
    padding-top: 1rem;
    padding-bottom: 1rem;
    box-shadow: theme(boxShadow.b);
  }
</style>

<script>
  // To hide header when user scrolls down and show when the user scrolls up
  const headerEl = document.querySelector('header')!;
  const headerBottom = headerEl.offsetTop + headerEl.offsetHeight;
  let prevScrollPos = window.scrollY;

  const scrollHandler = () => {
    const currentScrollPos = window.scrollY;
    if (prevScrollPos > currentScrollPos || currentScrollPos < headerBottom)
      headerEl.style.top = '0';
    else headerEl.style.top = `-${headerBottom}px`;

    // To change styling of header when it is displayed on scroll
    if (currentScrollPos > headerBottom)
      headerEl.classList.add('scroll-header');
    else headerEl.classList.remove('scroll-header');

    prevScrollPos = currentScrollPos;
  };

  window.addEventListener('scroll', scrollHandler);
</script>
